{"version":3,"sources":["components/Sidebar/Sidebar.js","components/Card/Card.js","components/CardContainer/CardContainer.js","apiCalls.js","DataCleaner.js","components/FavoriteButton/FavoriteButton.js","components/Nav/Nav.js","components/ErrorPopup/ErrorPopup.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Sidebar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","romanizeNum","episodeNum","roman","romanNums","forEach","num","state","films","react_default","a","createElement","className","episode_id","title","date","opening_crawl","Component","Card","_ref","entry","toggleFavorites","favorites","isFavorite","cardProperties","properties","map","property","key","header","text","name","type","concat","includes","onClick","CardContainer","entries","cards","components_Card_Card","fetchData","asyncToGenerator","regenerator_default","mark","_callee","url","response","cleanResponse","wrap","_context","prev","next","fetch","sent","status","Error","json","abrupt","stop","_x","apply","arguments","getMovie","_ref2","_callee2","randomEpisode","movieData","movieDataCollection","film","_context2","Math","round","random","API","results","returnMovieInfo","_ref3","_callee3","_context3","release_date","slice","_x2","getPerson","_ref4","_callee4","peopleData","peopleDataCollection","_context4","returnPeopleData","Promise","all","_ref5","_callee6","personCollection","peoplePromises","_context6","_ref6","_callee5","person","_ref7","planetName","planetPop","_ref8","speciesName","language","_context5","getHomeWorld","getSpecies","id","_x4","_x3","_ref9","_callee7","personHomeUrl","homeWorldData","homeWorld","_context7","homeworld","population","_x5","_ref10","_callee8","speciesUrl","speciesData","species","_context8","_x6","getPlanet","_ref11","_callee9","planetData","planetDataCollection","_context9","returnPlanetData","_ref12","_callee11","planetCollection","planetPromises","_context11","_ref13","_callee10","planet","_context10","t0","t1","t2","terrain","t3","t4","climate","t5","getResidents","residents","t6","t7","t8","t9","_x8","_x7","_ref14","_callee13","residentUrls","tenantPromises","_context13","_ref15","_callee12","residentUrl","residentData","_context12","_x10","_x9","getVehicle","_ref16","_callee14","vehicleData","vehicleDataCollection","_context14","returnVehicleData","_ref17","_callee16","vehicleCollection","vehiclePromises","_context16","_ref18","_callee15","vehicle","_context15","model","vehicle_class","passengers","_x12","_x11","FavoriteButton","handleFavoritesClick","favoritesSelected","e","NavLink","to","length","Nav","handlePeopleClick","peopleSelected","setState","vehiclesSelected","planetsSelected","showPeople","handlePlanetClick","showPlanet","handleVehicleClick","showVehicle","showFavorites","_this$state","components_FavoriteButton_FavoriteButton","ErrorPopup","closeError","App","_this$setState","category","card","objectSpread","isInFavorites","filter","toConsumableArray","defineProperty","setLocalStorage","find","fav","toggleErrorPopup","showErrorPopup","getFilm","DataCleaner","getPeople","people","getPlanets","planets","getVehicles","vehicles","getFavorites","newFavorites","localStorage","getLocalStorage","setItem","JSON","stringify","categoryName","parse","getItem","retrievedPeople","scroll","showVehicles","retrievedVehicles","showPlanets","retrievedPlanets","_this2","components_Nav_Nav","components_ErrorPopup_ErrorPopup","Route","exact","path","render","components_Sidebar_Sidebar","assign","components_CardContainer_CardContainer","Boolean","window","location","hostname","match","router","BrowserRouter","components_App_App","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.17c7b6f4.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Sidebar.css';\nimport PropTypes from 'prop-types';\n\nclass Sidebar extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\t\n\t\t}\n\t}\n\n\tromanizeNum = (episodeNum) => {\n\t  let roman = ''\n\t  let romanNums = [\n\t  \t'I','II','III','IV','V','VI','VII','VIII','IX', 'X'\n\t  ]\n\t  romanNums.forEach(num => {\n\t  \tif(romanNums[episodeNum]) {\n\t  \t\troman = romanNums[episodeNum]\n\t  \t}\n\t  })\n\n\t  return roman\n\t}\n\n\trender() {\n\t\tconst { films } = this.props\n\n\t\treturn (\n\t\t\t<div className=\"Sidebar fade\">\n\t\t\t\t<div className=\"star-wars\">\n\t\t\t\t\t<div className=\"crawl\">\n\t\t\t    \n\t\t\t    <div className=\"title\">\n\t\t\t      <p>Episode {this.romanizeNum(films.episode_id)}</p>\n\t\t\t      <h1 className=\"film-title\">{films.title}</h1>\n\t\t\t      <p>Released:  {films.date}</p>\n\t\t\t    </div>\n\t\t\t    \n\t\t\t    <p>{films.opening_crawl}</p>\n\n\t\t\t  \t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nSidebar.propTypes = {\n\tfilms: PropTypes.object\n}\n\nexport default Sidebar;","import React from 'react';\nimport './Card.css';\nimport PropTypes from 'prop-types';\n\nconst Card = ({ entry, toggleFavorites, favorites, isFavorite }) => {\n  const cardProperties = entry.properties.map(property => (\n    <p key={property.header} className=\"card-text\">\n      <span className=\"card-header\">\n        {property.header}\n      </span>\n      {property.text}\n    </p>\n  ));\n\n  return (\n    <div className=\"Card\">\n      <div className=\"fav-btn-card-container\">\n        <h3>{entry.name}</h3>\n        <button\n          type=\"submit\"\n          className={`fav-btn \n\t\t\t\t\t\t${(isFavorite || favorites.includes(entry))\n            ? 'fav-btn-active'\n            : 'fav-btn-inactive'}`}\n          onClick={() => toggleFavorites(entry)}\n        >\n          <i className=\"fas fa-jedi\" />\n        </button>\n      </div>\n      {cardProperties}\n    </div>\n  );\n};\n\nCard.propTypes = {\n  entry: PropTypes.object,\n  toggleFavorites: PropTypes.func,\n  favorites: PropTypes.array,\n  isFavorite: PropTypes.bool,\n};\n\nexport default Card;\n","import React from 'react';\nimport './CardContainer.css';\nimport PropTypes from 'prop-types';\nimport Card from '../Card/Card';\n\nconst CardContainer = ({ entries, toggleFavorites, favorites }) => {\n  const cards = entries.map(entry => (\n    <Card\n      entry={entry}\n      key={entry.name}\n      toggleFavorites={toggleFavorites}\n      favorites={favorites}\n      isFavorite={entry.isFavorite}\n    />\n  ));\n\n  return (\n    <div className=\"CardContainer\">\n      { cards }\n    </div>\n  );\n};\n\nCardContainer.propTypes = {\n  entries: PropTypes.array,\n  toggleFavorites: PropTypes.func,\n  favorites: PropTypes.array,\n};\n\nexport default CardContainer;\n","export const fetchData = async (url) => {\n\tconst response = await fetch(url)\n\tif (response.status >= 400) {\n\t\tthrow new Error('Fetch has failed')\n\t} else {\n\t\tconst cleanResponse = await response.json()\n\t\treturn cleanResponse\n\t}\n}\n","import * as API from './apiCalls'\n\n\tconst fetchData = async (url) => {\n\t\tconst response = await fetch(url)\n\t\tif (response.status >= 400) {\n\t\t\tthrow new Error('Fetch has failed')\n\t\t} else {\n\t\t\tconst cleanResponse = await response.json()\n\t\t\treturn cleanResponse\n\t\t}\n\t}\n\nexport const getMovie = async () => {\n\tconst randomEpisode = Math.round(Math.random() * 6 + 1)\n\tconst movieUrl = (\"https://swapi.co/api/films/\")\n\tconst movieData = await API.fetchData(movieUrl)\n\tconst movieDataCollection = await movieData.results[randomEpisode]\n\tconst film = await returnMovieInfo(movieDataCollection)\n\treturn film\n}\n\nexport const returnMovieInfo = async (film) => {\n\treturn ({\n\t\topening_crawl: film.opening_crawl,\n \t\tepisode_id: film.episode_id,\n \t\ttitle: film.title,\n \t\tdate: film.release_date.slice(0,4)\n\t})\n}\n\nexport const getPerson = async () => {\n\tconst peopleUrl = (\"https://swapi.co/api/people/\")\n\tconst peopleData = await API.fetchData(peopleUrl)\n\tconst peopleDataCollection = await returnPeopleData(peopleData.results)\n\treturn Promise.all(peopleDataCollection)\n}\n\nexport const returnPeopleData = async (personCollection) => {\n\tconst peoplePromises = await personCollection.map( async person => {\n\tconst { planetName, planetPop } = await getHomeWorld(person)\n\tconst { speciesName, language } = await getSpecies(person)\n\n\treturn {\n\t\tname: person.name,\n\t\tid: person.name,\n\t\tisFavorite: false,\n\t\ttype: 'people',\n\t\tproperties: [\n\t\t\t{header: 'Homeworld: ', text: `${planetName}`},\n\t\t\t{header: 'Species: ', text: `${speciesName}`},\n\t\t\t{header: 'Population: ', text: `${planetPop}`},\n\t\t\t{header: 'Language: ', text: `${language}`}\n\t\t] \n\t}\n})\n\treturn Promise.all(peoplePromises)\n}\n\nexport const getHomeWorld = async (person) => {\n\tconst personHomeUrl = person.homeworld\n\tconst homeWorldData = await API.fetchData(personHomeUrl)\n\tconst homeWorld = {\n\t\tplanetName: homeWorldData.name,\n\t\tplanetPop: homeWorldData.population\n\t}\n\treturn homeWorld\n}\n\nexport const getSpecies = async (person) => {\n\tconst speciesUrl = person.species[0]\n\tconst speciesData = await API.fetchData(speciesUrl)\n\tconst species = {\n\t\tspeciesName: speciesData.name,\n\t\tlanguage: speciesData.language\n\t}\n\treturn species\n}\n\nexport const getPlanet = async () => {\n\tconst planetUrl = (\"https://swapi.co/api/planets/\")\n\tconst planetData = await API.fetchData(planetUrl)\n\tconst planetDataCollection = await returnPlanetData(planetData.results)\n\treturn Promise.all(planetDataCollection)\n}\n\nexport const returnPlanetData = async (planetCollection) => {\n\tconst planetPromises = await planetCollection.map( async planet => {\n\t\treturn {\n\t\t\tname: planet.name,\n\t\t\tid: planet.name,\n\t\t\tisFavorite: false,\n\t\t\ttype: 'planets',\n\t\t\tproperties: [\n\t\t\t\t{header: 'Terrain: ', text: `${planet.terrain}`},\n\t\t\t\t{header: 'Population: ', text: `${planet.population}`},\n\t\t\t\t{header: 'Climate: ', text: `${planet.climate}`},\n\t\t\t\t{header: 'Residents: ', text: `${await getResidents(planet.residents)}`}\n\t\t\t]\n\t\t}\n\t})\n\treturn Promise.all(planetPromises)\n}\n\nexport const getResidents = async (residentUrls) => {\n\tconst tenantPromises = residentUrls.map(async residentUrl => {\n\t\tconst residentData = await API.fetchData(residentUrl)\n\t\treturn residentData.name\n\t})\n\treturn await Promise.all(tenantPromises)\n}\n\nexport const getVehicle = async () => {\n\tconst vehicleUrl = (\"https://swapi.co/api/vehicles/\")\n\tconst vehicleData = await API.fetchData(vehicleUrl)\n\tconst vehicleDataCollection = await returnVehicleData(vehicleData.results)\n\treturn Promise.all(vehicleDataCollection)\n}\n\nexport const returnVehicleData = async (vehicleCollection) => {\t\n\tconst vehiclePromises = await vehicleCollection.map( async vehicle => {\n\t\treturn {\n\t\t\tname: vehicle.name,\n\t\t\tid: vehicle.name,\n\t\t\tisFavorite: false,\n\t\t\ttype: 'vehicles',\n\t\t\tproperties: [\n\t\t\t\t{header: 'Model: ', text: `${vehicle.model}`},\n\t\t\t\t{header: 'Class: ', text: `${vehicle.vehicle_class}`},\n\t\t\t\t{header: 'Passengers: ', text: `${vehicle.passengers}`}\n\t\t\t]\n\t\t}\n\t})\n\treturn Promise.all(vehiclePromises)\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport './FavoriteButton.css';\nimport PropTypes from 'prop-types';\n\nconst FavoriteButton = ({ favorites, handleFavoritesClick, favoritesSelected }) => (\n  <div className=\"FavoriteButton\">\n    <button\n      className={`cat-button favorites-button \n            ${favoritesSelected\n        ? 'cat-button-active'\n        : 'cat-button-inactive'}`}\n      name=\"favorites\"\n      onClick={e => handleFavoritesClick(e)}\n    >\n      <NavLink to=\"/favorites\" className=\"nav\">Favorites</NavLink>\n      <span\n        className=\"favorites-count\"\n      >\n        {favorites ? favorites.length : 0}\n      </span>\n    </button>\n  </div>\n);\n\nFavoriteButton.propTypes = {\n  favorites: PropTypes.oneOfType([\n    PropTypes.array,\n    PropTypes.number,\n  ]),\n  handleFavoritesClick: PropTypes.func,\n  favoritesSelected: PropTypes.bool,\n};\n\nexport default FavoriteButton;\n","import React, {Component} from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Nav.css'\nimport FavoriteButton from '../FavoriteButton/FavoriteButton.js';\nimport PropTypes from 'prop-types';\n\n\nclass Nav extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n      peopleSelected: false,\n      vehiclesSelected: false,\n      planetsSelected: false,\n      favoritesSelected: false\n\t\t}\n\t}\n\n\thandlePeopleClick = () => {\n\t\tif (this.state.peopleSelected === true) {\n\t\t\tthis.setState({ peopleSelected: false })\n\t\t} else {\n\t\t\tthis.setState({ \n\t\t\t\tpeopleSelected: true,      \n\t\t\t\tvehiclesSelected: false,\n      \tplanetsSelected: false,\n      \tfavoritesSelected: false \n\t\t\t})\t\n\t\t\tthis.props.showPeople()\n\t\t}\n\t}\n\n\thandlePlanetClick = () => {\n\t\tif (this.state.planetsSelected === true) {\n\t\t\tthis.setState({ planetsSelected: false })\n\t\t} else {\n\t\t\tthis.setState({ \n\t\t\t\tpeopleSelected: false,      \n\t\t\t\tvehiclesSelected: false,\n\t\t\t\tplanetsSelected: true,\n\t\t\t\tfavoritesSelected: false \n\t\t\t})\t\n\t\t\tthis.props.showPlanet()\n\t\t}\n\t}\n\n\thandleVehicleClick = () => {\n\t\tif (this.state.vehiclesSelected === true) {\n\t\t\tthis.setState({ vehiclesSelected: false })\n\t\t} else {\n\t\t\tthis.setState({ \t\t\t\t\n\t\t\t\tpeopleSelected: false,      \n\t\t\t\tvehiclesSelected: true,\n\t\t\t\tplanetsSelected: false,\n\t\t\t\tfavoritesSelected: false \n\t\t\t})\t\n\t\t\tthis.props.showVehicle()\n\t\t}\n\t}\n\n\thandleFavoritesClick = () => {\n\t\tif (this.state.favoritesSelected === true) {\n\t\t\tthis.setState({ favoritesSelected: false })\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tpeopleSelected: false,\n\t\t\t\tvehiclesSelected: false,\n\t\t\t\tplanetsSelected: false,\n\t\t\t\tfavoritesSelected: true\n\t\t\t})\n\t\t\tthis.props.showFavorites()\n\t\t}\n\t}\n\nrender() {\n\tconst { favorites } = this.props\n\tconst { peopleSelected, planetsSelected, vehiclesSelected, favoritesSelected } = this.state\n\n\treturn(\n\t\t<div className=\"Nav\">\n\t\t    <button \n\t\t      className={`cat-button people-button \n\t\t      \t${peopleSelected \n\t\t      \t\t? \"cat-button-active\" \n\t\t      \t\t: \"cat-button-inactive\" }`}\n\t\t      name=\"people\"\n\t\t      onClick={this.handlePeopleClick}\n\t\t    >\n\t\t    \t<NavLink to=\"/people\" className=\"nav\">People</NavLink>\n\t\t    </button>\n\t\t    <button \n\t\t      className={`cat-button planets-button \n\t\t      \t${planetsSelected \n\t\t      \t\t? \"cat-button-active\" \n\t\t      \t\t: \"cat-button-inactive\" }`}\n\t\t      name=\"planets\"\n\t\t      onClick={this.handlePlanetClick}\n\t\t    >\n\t\t    \t<NavLink to=\"/planets\" className=\"nav\">Planets</NavLink>\n\t\t    </button>\n\t\t    <button \n\t\t      className={`cat-button vehicles-button \n\t\t      \t${vehiclesSelected \n\t\t      \t\t? \"cat-button-active\" \n\t\t      \t\t: \"cat-button-inactive\" }`}\n\t\t      name=\"vehicles\"\n\t\t      onClick={this.handleVehicleClick}\n\t\t    >\n\t\t    \t<NavLink to=\"/vehicles\" className=\"nav\">Vehicles</NavLink>\n\t\t    </button>\n\t\t    <FavoriteButton \n\t\t    \tclassName=\"FavoriteButton\"\n\t\t    \tfavorites={favorites}\n\t\t    \thandleFavoritesClick={this.handleFavoritesClick}\n\t\t    \tfavoritesSelected={favoritesSelected}\n\t\t    />\n\t\t</div>\n\t\t)\n\t}\n}\n\nNav.propTypes = {\n\tshowPeople: PropTypes.func,\n\tshowVehicle: PropTypes.func,\n\tshowPlanet: PropTypes.func,\n\tfavorites: PropTypes.oneOfType([\n  PropTypes.array,\n  PropTypes.number\n  ]),\n  toggleCategoryState: PropTypes.func,\n  showFavorites: PropTypes.func,\n  toggleErrorPopup: PropTypes.func\n}\n\nexport default Nav;","import React from 'react';\nimport './ErrorPopup.css';\n\nconst ErrorPopup = ({ closeError }) => {\n  return (\n    <div className=\"ErrorPopup\">\n      <div className=\"popup-inner\">\n        <h1>You have no favorites selected!</h1>\n        <button onClick={closeError}>X</button>\n      </div>\n    </div>\n  )\n}\n\nexport default ErrorPopup;\n","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport './App.css';\nimport Sidebar from '../Sidebar/Sidebar.js';\nimport CardContainer from '../CardContainer/CardContainer.js';\nimport * as DataCleaner from '../../DataCleaner.js';\nimport Nav from '../Nav/Nav.js';\nimport ErrorPopup from '../ErrorPopup/ErrorPopup.js';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      films: {},\n      people: [],\n      vehicles: [],\n      planets: [],\n      peopleSelected: false,\n      vehiclesSelected: false,\n      planetsSelected: false,\n      favorites: [],\n      scroll: true,\n      favoritesSelected: false,\n      showErrorPopup: false\n    }\n  }\n\n  async componentDidMount() {\n    this.getFilm()\n    this.showPeople()\n    this.showVehicles()\n    this.showPlanets()\n    this.getFavorites()\n  }\n\n  toggleFavorites = async (entry) => {\n    let favorites;\n    const { type, id } = entry\n    const category = this.state[type].map(card => {\n      if(card.id === id) {\n        return {...card, isFavorite: !card.isFavorite}\n      }\n      return card\n    })\n\n    if (!this.isInFavorites(entry)) {\n      favorites = [...this.state.favorites, entry]\n    } else {\n      favorites = this.state.favorites.filter(card => card.id !== id)      \n    }\n\n    await this.setState({ [type]: category, favorites: favorites })\n    await this.setLocalStorage('favorites', favorites)\n    await this.setLocalStorage( [type], category)\n  }\n\n  isInFavorites = (entry) => {\n    return this.state.favorites.find((fav) => fav.id === entry.id)\n  }\n\n  toggleErrorPopup = () => {\n    this.setState({\n      showErrorPopup: !this.state.showErrorPopup\n    })\n  }\n\n  showFavorites = () => {\n    if(this.state.favorites.length) {\n      this.setState({ \n        favoritesSelected: true,\n        peopleSelected: false,\n        planetsSelected: false,\n        vehiclesSelected: false, \n      })\n    } else {\n        this.toggleErrorPopup()  \n    }\n  }\n\n  getFilm = async () => {\n    const films = await DataCleaner.getMovie()\n    this.setState({ films })\n  }\n\n  getPeople = async () => {\n    const people = await DataCleaner.getPerson()\n    this.setState({ people })\n    this.setLocalStorage('people', people)\n  }\n\n  getPlanets = async () => {\n    const planets = await DataCleaner.getPlanet()\n    this.setState({ planets })\n    this.setLocalStorage('planets', planets)\n  }\n\n  getVehicles = async () => {\n    const vehicles = await DataCleaner.getVehicle()\n    this.setState({ vehicles })\n    this.setLocalStorage('vehicles', vehicles)\n  }\n\n  getFavorites = async () => {\n    const { favorites } = this.state\n    if (!localStorage.favorites && favorites.length) {\n      this.setLocalStorage('favorites', favorites)\n    } else if (localStorage.favorites) {\n      const newFavorites = await this.getLocalStorage('favorites')\n      this.setState({favorites: newFavorites})\n    }\n  }\n\n  setLocalStorage = (key, category) => {\n    localStorage.setItem(key, JSON.stringify(category))\n  }\n\n  getLocalStorage = (categoryName) => {\n    if(localStorage.length) {\n      return JSON.parse(localStorage.getItem(categoryName))\n    }\n  }\n\n  showPeople = async (e) => {  \n    if (!localStorage.people) {\n      await this.getPeople()\n    } else if (localStorage.people) {\n      const retrievedPeople = this.getLocalStorage('people')\n      this.setState({ \n        people: retrievedPeople,\n        peopleSelected: true,\n        planetsSelected: false,\n        vehiclesSelected: false,\n        favoritesSelected: false,\n        scroll: false\n      })\n    }\n  }\n  \n  showVehicles = async (e) => {\n    if (!localStorage.vehicles) {\n      await this.getVehicles()\n    } else if (localStorage.vehicles) {\n      const retrievedVehicles = this.getLocalStorage('vehicles')\n      this.setState({\n        vehicles: retrievedVehicles,\n        vehiclesSelected: true,\n        peopleSelected: false,\n        planetsSelected: false,\n        favoritesSelected: false,\n        scroll: false\n      })\n    }\n  }\n\n  showPlanets = async (e) => {\n    if (!localStorage.planets) {\n      await this.getPlanets()\n    } else if (localStorage.planets) {\n      const retrievedPlanets = this.getLocalStorage('planets')\n      this.setState({\n        planets: retrievedPlanets,\n        planetsSelected: true,\n        peopleSelected: false,\n        vehiclesSelected: false,\n        favoritesSelected: false,\n        scroll: false\n      })\n    }\n  }\n\n  render() {\n    const { \n            films, \n            people, \n            vehicles, \n            planets, \n            favorites, \n            showErrorPopup\n          } = this.state\n\n    return (\n      <div className=\"App\">\n        <header className=\"header\">\n          <h1 className=\"app-title\">swapi box</h1>\n          <Nav\n            showPeople={this.showPeople}\n            showPlanet={this.showPlanets}\n            showVehicle={this.showVehicles}\n            showFavorites={this.showFavorites}\n            favorites={favorites}\n            toggleErrorPopup={this.toggleErrorPopup}\n          />\n        </header>\n        {showErrorPopup \n          ?\n          <ErrorPopup\n            text=\"close\"\n            closeError={this.toggleErrorPopup}\n          />\n          : <div className=\"error-popup-placeholder\"></div>\n        }\n        <Route exact path=\"/\" render={(props) => <Sidebar {...props} films={films} />}\n        />\n        <Route \n          exact path=\"/people\" \n          render={(props) => <CardContainer {...props} \n            entries={people} \n            toggleFavorites={this.toggleFavorites} \n            favorites={favorites} \n          />}\n        />\n        <Route \n          exact path=\"/vehicles\" \n          render={(props) => <CardContainer {...props} \n            entries={vehicles} \n            toggleFavorites={this.toggleFavorites} \n            favorites={favorites} \n          />}\n        />\n        <Route \n          exact path=\"/planets\" \n          render={(props) => <CardContainer {...props} \n            entries={planets} \n            toggleFavorites={this.toggleFavorites} \n            favorites={favorites} \n          />}\n        />\n        <Route \n          exact path=\"/favorites\" \n          render={(props) => <CardContainer {...props} \n            entries={favorites} \n            toggleFavorites={this.toggleFavorites} \n            favorites={favorites} \n          />}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst router = (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(router, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}