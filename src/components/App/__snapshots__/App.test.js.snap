// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App component matches the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <header
          className="header"
        >
          <h1
            className="app-title"
          >
            SWAP
            <span
              className="title-i"
            >
              I
            </span>
             Box
          </h1>
          <Nav
            favorites={Array []}
            showFavorites={[Function]}
            showPeople={[Function]}
            showPlanet={[Function]}
            showVehicle={[Function]}
            toggleErrorPopup={[Function]}
          />
        </header>,
        <div
          className="error-popup-placeholder"
        />,
        <Route
          exact={true}
          path="/"
          render={[Function]}
        />,
        <Route
          exact={true}
          path="/people"
          render={[Function]}
        />,
        <Route
          exact={true}
          path="/vehicles"
          render={[Function]}
        />,
        <Route
          exact={true}
          path="/planets"
          render={[Function]}
        />,
        <Route
          exact={true}
          path="/favorites"
          render={[Function]}
        />,
      ],
      "className": "App",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h1
              className="app-title"
            >
              SWAP
              <span
                className="title-i"
              >
                I
              </span>
               Box
            </h1>,
            <Nav
              favorites={Array []}
              showFavorites={[Function]}
              showPeople={[Function]}
              showPlanet={[Function]}
              showVehicle={[Function]}
              toggleErrorPopup={[Function]}
            />,
          ],
          "className": "header",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "SWAP",
                <span
                  className="title-i"
                >
                  I
                </span>,
                " Box",
              ],
              "className": "app-title",
            },
            "ref": null,
            "rendered": Array [
              "SWAP",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "I",
                  "className": "title-i",
                },
                "ref": null,
                "rendered": "I",
                "type": "span",
              },
              " Box",
            ],
            "type": "h1",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "favorites": Array [],
              "showFavorites": [Function],
              "showPeople": [Function],
              "showPlanet": [Function],
              "showVehicle": [Function],
              "toggleErrorPopup": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "header",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "error-popup-placeholder",
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "exact": true,
          "path": "/",
          "render": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "exact": true,
          "path": "/people",
          "render": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "exact": true,
          "path": "/vehicles",
          "render": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "exact": true,
          "path": "/planets",
          "render": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "exact": true,
          "path": "/favorites",
          "render": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <header
            className="header"
          >
            <h1
              className="app-title"
            >
              SWAP
              <span
                className="title-i"
              >
                I
              </span>
               Box
            </h1>
            <Nav
              favorites={Array []}
              showFavorites={[Function]}
              showPeople={[Function]}
              showPlanet={[Function]}
              showVehicle={[Function]}
              toggleErrorPopup={[Function]}
            />
          </header>,
          <div
            className="error-popup-placeholder"
          />,
          <Route
            exact={true}
            path="/"
            render={[Function]}
          />,
          <Route
            exact={true}
            path="/people"
            render={[Function]}
          />,
          <Route
            exact={true}
            path="/vehicles"
            render={[Function]}
          />,
          <Route
            exact={true}
            path="/planets"
            render={[Function]}
          />,
          <Route
            exact={true}
            path="/favorites"
            render={[Function]}
          />,
        ],
        "className": "App",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h1
                className="app-title"
              >
                SWAP
                <span
                  className="title-i"
                >
                  I
                </span>
                 Box
              </h1>,
              <Nav
                favorites={Array []}
                showFavorites={[Function]}
                showPeople={[Function]}
                showPlanet={[Function]}
                showVehicle={[Function]}
                toggleErrorPopup={[Function]}
              />,
            ],
            "className": "header",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "SWAP",
                  <span
                    className="title-i"
                  >
                    I
                  </span>,
                  " Box",
                ],
                "className": "app-title",
              },
              "ref": null,
              "rendered": Array [
                "SWAP",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "I",
                    "className": "title-i",
                  },
                  "ref": null,
                  "rendered": "I",
                  "type": "span",
                },
                " Box",
              ],
              "type": "h1",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "favorites": Array [],
                "showFavorites": [Function],
                "showPeople": [Function],
                "showPlanet": [Function],
                "showVehicle": [Function],
                "toggleErrorPopup": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "header",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "error-popup-placeholder",
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "exact": true,
            "path": "/",
            "render": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "exact": true,
            "path": "/people",
            "render": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "exact": true,
            "path": "/vehicles",
            "render": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "exact": true,
            "path": "/planets",
            "render": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "exact": true,
            "path": "/favorites",
            "render": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
